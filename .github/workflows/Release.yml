name: Release

on:
  push:
  schedule:
    - cron: '0 18 * * 5'  # Runs every Friday at 6:00pm UTC

jobs:
  build-project:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: vcpkg
          key: vcpkg-cache-${{ runner.os }}

      - name: Install dependencies on Windows (vcpkg)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          if (-Not (Test-Path "vcpkg")) {
            git clone https://github.com/microsoft/vcpkg.git
            .\vcpkg\bootstrap-vcpkg.bat
          }
          .\vcpkg\vcpkg install

      - name: Apt install for Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt install libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev pkg-config

      - name: Install dependencies on Ubuntu (vcpkg)
        if: matrix.os == 'ubuntu-latest'
        run: |
          if [ ! -d "vcpkg" ]; then
            git clone https://github.com/microsoft/vcpkg.git
            ./vcpkg/bootstrap-vcpkg.sh
          fi
          ./vcpkg/vcpkg install

      - name: Build project
        run: |
          cmake -B build -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
          cmake --build build/ --config Debug

      - name: Rename Executables
        run: |
          cp -r Game/ Game_${{ matrix.os }}

      - name: Upload Executables as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: game-folder-${{ matrix.os }}
          path: ${{ github.workspace }}/Game_${{ matrix.os }}

  deploy_release:
    runs-on: ubuntu-latest
    needs: build-project

    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Download Artifacts from cmake-build-linux
        uses: actions/download-artifact@v4
        with:
          name: game-folder-ubuntu-latest
          path: game-folder-ubuntu-latest

      - name: Download Artifacts from cmake-build-windows
        uses: actions/download-artifact@v4
        with:
          name: game-folder-windows-latest
          path: game-folder-windows-latest

      - name: List directory structure for debugging
        run: |
          echo "Current directory structure:"
          ls -R

      - name: Group Executables
        run: |
          # Rename downloaded artifacts to a unified folder
          mkdir ReleaseGame
          mv game-folder-ubuntu-latest/* ReleaseGame/ || echo "Warning: game-folder-ubuntu-latest is empty or missing."
          mv game-folder-windows-latest/* ReleaseGame/ || echo "Warning: game-folder-windows-latest is empty or missing."

      - name: Create a Release
        uses: elgohr/Github-Release-Action@v5
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: Release ${{ github.run_number }}
          tag: v${{ github.run_number }}
          workdir: ReleaseGame
