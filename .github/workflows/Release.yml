name: Release

on:
  push:
  schedule:
    - cron: '0 18 * * 5'  # Runs every Friday at 6:00pm UTC

jobs:
  build-project:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Target Workflow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${GITHUB_TOKEN}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/Windows.yml/dispatches \
            -d '{"ref":"16-feat-manage-release"}'
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${GITHUB_TOKEN}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/Linux.yml/dispatches \
            -d '{"ref":"16-feat-manage-release"}'

  deploy_release:
    runs-on: ubuntu-latest
    needs: build-project

    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Download Artifacts from cmake-build-linux
        uses: actions/download-artifact@v3
        with:
          name: Game_Linux
          path: ./Game_Linux

      - name: Download Artifacts from cmake-build-windows
        uses: actions/download-artifact@v3
        with:
          name: Game_Windows
          path: ./Game_Windows

      - name: Check if artifacts are empty
        run: |
          if [ -z "$(ls -A Game_Linux)" ] && [ -z "$(ls -A Game_Windows)" ]; then
            echo "Artifacts are empty. Exiting..."
            exit 1
          fi

      - name: Group Executables
        run: |
          mkdir Game
          mv Game_Linux/* ReleaseGame/
          mv Game_Windows/*.exe ReleaseGame/

      - name: Create a Release
        uses: elgohr/Github-Release-Action@v5
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: Release ${{ github.run_number }}
          tag: v${{ github.run_number }}
          workdir: ReleaseGame
